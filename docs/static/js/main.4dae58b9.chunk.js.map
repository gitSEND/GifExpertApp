{"version":3,"sources":["compoents/AddCategory.js","helpers/getGifs.js","compoents/GifGridItem.js","compoents/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAiBjD,OACC,0BAAMC,SAXc,SAACC,GAErBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAnBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,YAwBzBZ,EAAYe,UAAY,CACvBd,c,OAAee,EAAUC,KAAKC,Y,2BC9BlBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,+DAEHI,MAAMF,GAFH,cAEhBG,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATd,kBAYfM,GAZe,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACpC,OACC,yBAAKc,UAAU,0CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACflB,mBAAS,CAClCyB,KAAM,GACNa,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAmBzC,OAbAC,qBAAU,WAETxB,EAAQC,GACNwB,MAAK,SAAAC,GACLH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAIV,CAACpB,IAGGqB,EDf2BK,CAAa1B,GAAjCa,EAJ0B,EAIhCN,KAAca,EAJkB,EAIlBA,QAGtB,OACC,oCACC,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,eAEZ,yBAAKA,UAAU,aAEbH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEfvBkB,EAAe,WAAO,IAAD,EAEG9C,mBAAS,CAAC,gBAFb,mBAE1B+C,EAF0B,KAEdhD,EAFc,KAIjC,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEEgD,EAAWpB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CACC2B,IAAK3B,EACLA,SAAUA,UCbjB8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.4dae58b9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\r\n\t\t\tsetInputValue(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t></input>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.prototype = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=jICB9vjMSlj250BW0NfjPbUFGj1b9TBO`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t}\r\n\t})\r\n\treturn gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title}></img>\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map((img) => (\r\n\t\t\t\t\t\t<GifGridItem key={img.id} {...img}></GifGridItem>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n\r\n};\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetGifs(category)\r\n\t\t\t.then(imgs => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\t}, [category])\r\n\r\n\r\n\treturn state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./compoents/AddCategory\";\r\nimport { GifGrid } from \"./compoents/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\tconst [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories}></AddCategory>\r\n\t\t\t<hr></hr>\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map((category) => (\r\n\t\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t\tcategory={category}>\r\n\t\t\t\t\t\t</GifGrid>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}